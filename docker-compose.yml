networks:
  lan:
    driver: bridge

services:
  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    user: "${UID}:${GID}"
    # network_mode: "host"
    ports:
      - "8096:8096"
    volumes:
      - "${JELLYFIN_CONFIG}:/config"
      - "${JELLYFIN_CACHE}:/cache"
      - type: bind
        source: "${JELLYFIN_MOVIES}"
        target: /media/movies
      - type: bind
        source: "${JELLYFIN_TV}"
        target: /media/tv
    restart: unless-stopped
    env_file:
      - path: .env
        required: true
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
    networks:
      - lan

  mc:
    image: itzg/minecraft-server
    container_name: minecraft
    environment:
      EULA: "true"
      # server properties file will be created upon first initialization
      OVERRIDE_SERVER_PROPERTIES: "false"
      WHITELIST_FILE: "/data/whitelist.json"
      OPS_FILE: "/data/ops.json"
      ENFORCE_WHITELIST: "true"
      SNOOPER_ENABLED: "false"
      MEMORY: 3G
      TYPE: "PAPER"
      PAPER_CHANNEL: "experimental"
      VERSION: "1.21.6"
      # geyser allows bedrock players to connect to java server
      # floodgate allows xbox players to connect as well
      # note: it uses spigot
      PLUGINS: |
        https://download.geysermc.org/v2/projects/geyser/versions/latest/builds/latest/downloads/spigot
        https://download.geysermc.org/v2/projects/floodgate/versions/latest/builds/latest/downloads/spigot
    ports:
      # :25565 is default minecraft server port
      - "25565:25565"
      # for bedrock people
      - "19132:19132/udp"
    volumes:
      - "${MINECRAFT_DATA}:/data"
      - "${MINECRAFT_DATA}/whitelist.json:/data/whitelist.json"
      - "${MINECRAFT_DATA}/ops.json:/data/ops.json"
    networks:
      - lan
    env_file:
      - path: .env
        required: true

  homeassistant:
    container_name: homeassistant
    image: ghcr.io/home-assistant/home-assistant:stable
    privileged: true
    restart: unless-stopped
    environment:
      - TZ=America/Los_Angeles # e.g., "America/New_York"
    volumes:
      - "${HOME_ASSISTANT_CONFIG}:/config"
      - /run/dbus:/run/dbus:ro
    env_file:
      - path: .env
        required: true
    networks:
      - lan
    ports:
      # this is the default but setting this here for clarity
      - "8123:8123"

  chatpardy:
    image: ghcr.io/johncmanuel/chatpardy:latest
    restart: unless-stopped
    container_name: chatpardy
    user: "${UID}:${GID}"
    volumes:
      - "${CHATPARDY_DB_PATH}:/app/Database"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
    networks:
      - lan
    env_file:
      - path: .env
        required: true
    ports:
      - "8080:80"
